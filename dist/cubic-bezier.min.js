// CubicBezier Easing v1.0.1 | thednp Â© 2020 | MIT-License
!function(e,t){"object"==typeof exports&&"undefined"!=typeof module?module.exports=t():"function"==typeof define&&define.amd?define(t):(e=e||self).CubicBezier=t()}(this,(function(){"use strict";var e=function(e,t,i,r,s){var n=this;this.cx=3*e,this.bx=3*(i-e)-this.cx,this.ax=1-this.cx-this.bx,this.cy=3*t,this.by=3*(r-t)-this.cy,this.ay=1-this.cy-this.by;var u=function(e){return n.sampleCurveY(n.solveCurveX(e))};return Object.defineProperty(u,"name",{writable:!0}),u.name=s||"cubic-bezier("+[e,t,i,r]+")",u};return e.prototype.sampleCurveX=function(e){return((this.ax*e+this.bx)*e+this.cx)*e},e.prototype.sampleCurveY=function(e){return((this.ay*e+this.by)*e+this.cy)*e},e.prototype.sampleCurveDerivativeX=function(e){return(3*this.ax*e+2*this.bx)*e+this.cx},e.prototype.solveCurveX=function(e){var t,i,r,s,n,u;for(r=e,u=0;u<32;u++){if(s=this.sampleCurveX(r)-e,Math.abs(s)<1e-5)return r;if(n=this.sampleCurveDerivativeX(r),Math.abs(n)<1e-5)break;r-=s/n}if((r=e)<(t=0))return t;if(r>(i=1))return i;for(;t<i;){if(s=this.sampleCurveX(r),Math.abs(s-e)<1e-5)return r;e>s?t=r:i=r,r=.5*(i-t)+t}return r},e}));
